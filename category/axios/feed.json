{
    "version": "https://jsonfeed.org/version/1",
    "title": "Florence的城堡 • All posts by \"axios\" category",
    "description": "我在这里随便写写",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/05/04/%E5%89%8D%E7%AB%AF%E7%9A%84%E4%B8%A2%E4%BA%BA%E7%AC%94%E8%AE%B0/axios/axios%E5%B7%B4%E6%8B%89%E5%B7%B4%E6%8B%89/",
            "url": "http://example.com/2023/05/04/%E5%89%8D%E7%AB%AF%E7%9A%84%E4%B8%A2%E4%BA%BA%E7%AC%94%E8%AE%B0/axios/axios%E5%B7%B4%E6%8B%89%E5%B7%B4%E6%8B%89/",
            "title": "axios巴拉巴拉",
            "date_published": "2023-05-04T09:59:47.838Z",
            "content_html": "<h1 id=\"axios-的基本使用\"><a class=\"anchor\" href=\"#axios-的基本使用\">#</a> axios 的基本使用</h1>\n<ul>\n<li>主要配置内容以及流程\n<ul>\n<li>基本全局配置</li>\n<li>Token 密钥等</li>\n<li>响应的统一基本处理</li>\n<li>封装请求方法（在后面）</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// /src/axios.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 配置全局的基础配置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">\"axios\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// baseURL,timeout,header,responseType,withCredentials</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 配置中心</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> webConfig <span class=\"token keyword\">from</span> <span class=\"token string\">\"/src/global.config.js\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 引入一种加密方式，比如此处使用的是 base64，除此之外还有 md5 等等等啥的</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>Base64<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"js-base64\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 后面的请求用 request 来发</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">let</span> request <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 1. 基础配置</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span><span class=\"token string\">\"http://localhost:8000/\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token literal-property property\">responseType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string-property property\">\"请求头的名字\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"请求头的内容\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 拦截器</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>request<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// 进行 token 密钥的设置</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">let</span> whiteList <span class=\"token operator\">=</span> webConfig<span class=\"token punctuation\">.</span>whiteListApi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">let</span> token <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>whiteList<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        config<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// 密钥 (通过 secretId + 特殊算法)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">let</span> _secret <span class=\"token operator\">=</span> Base64<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>webConfig<span class=\"token punctuation\">.</span>secretId <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    config<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>secret <span class=\"token operator\">=</span> _secret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 响应拦截器 (通常判断后端返回的状态码)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>request<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">// 响应的统一处理</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">// 此处为响应成功的拦截</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>code <span class=\"token operator\">||</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>msg <span class=\"token operator\">||</span> <span class=\"token string\">\"未知错误\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有权限\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">!==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"错误码\"</span> <span class=\"token operator\">+</span> code <span class=\"token operator\">+</span> <span class=\"token string\">\"  \"</span> <span class=\"token operator\">+</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\">// 此处为响应失败的拦截</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">// 一般使用组件库中的消息提示</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">// 响应拦截和请求拦截最后都要有一个 return</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">// 这里的 return 属于是一个兜底处理了，防止忘记写 cath，起码还有一个错误提示，让 cath 可以处理，到时候具体请求的时候，可以通过 cath 可以定义错误。</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">// 最后把都配置好的 request 暴露出去使用。</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> request<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">// 去吧，去大干一场！失败了大不了一起投简历！</span></pre></td></tr></table></figure><blockquote>\n<p>记得整一个 “配置中心”<br />\n 配置中心里面可以搞一搞白名单啊，token 加密啥的</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>global.config.js</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 配置中心</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 配置白名单，哪些请求不需要验证 token，将它们暴露出去</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">whiteListApi</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/ip/get_list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/box/get_info\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">secretId</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"封装请求方法\"><a class=\"anchor\" href=\"#封装请求方法\">#</a> 封装请求方法</h1>\n<blockquote>\n<p>根据项目的业务模块在 api/ 下创建各个模块的文件</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}